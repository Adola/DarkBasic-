Rem Project: Engine
Rem Created: 11/11/2009 5:56:49 PM
rem Author: Adam Fowler (Student I.D. 90146512)
rem NOTE: All code up to v1.0 is authored by Adam Fowler
remstart
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
remend

Rem ***** Main Source File *****
rem Variables++++++++++++++++++++++++++++++++++++++++++++++++++++++++Variables
global jumping
global start_y#
global jump_angle#
global jumpable

rem Graphics, Requirements ++++++++++++++++++++++++++++++++++++++++++Graphics, Reqs.
Sync On
Sync Rate 60
hide mouse
autocam off
backdrop on
set camera range 1,5000
fog on
fog distance 4000
fog color RGB(142,35,24)
color backdrop RGB(226,98,84)
set cursor 0,0
`set ambient light 10
`color ambient light rgb(64,64,128)
`set normalization off
`set point light 0,0,0,500
`position light 0,0,100,0
`color light 0,512,512,255
`set light range 0,1000
rem Sounds!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sounds
`load sound "landing.wav",1
`loop sound 1
`load 3dsound "Fire loop.wav",2
`load sound "Machine gun 1.wav",3
`position sound 2,200,100,200 
`loop sound 2
`load sound "step8.wav",4
REM load textures and objects++++++++++++++++++++++++++++++++++++++++++Textures
load image "apple.jpg",1
load image "sand.jpg",3
load image "t_skin12.jpg",4
load image "flower2.png",5
Rem load particles++++++++++++++++++++++++++++++++++++++++++++++++++++Particles
Load Image "smoke.jpg",4
For x = 0 to 20
	Make object plain x+1000,2,2
	set object collision off x+1000
	Texture object x+1000,4
	Set object x+1000,1,0,0
	Ghost object on x+1000
Next x
rem Pn = Particle Numbers, this is for later in the building of the particles.
Pn=1000
rem make matrix.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++Matrix
make matrix 1,10000,10000,20,20
   rem sets textures on Matrix.
fill matrix 1,0,1
prepare matrix texture 1,3,1,1
   rem Builds matrix.
randomize matrix 1,150
update matrix 1


REM objects+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Objects
load object "AST_01.X",52
load object "H-AK47-Static.X",53
load effect "CartoonObject.dbs", 1,1
set object effect 53,1
position object 52,200,100,200
Scale object 53,5000,1000,5000
loop object 52
make object cube 54,15
texture object 54,1
position object 54,0,190,0
set object collision on 54
 Rem Thrid person object.
`make object sphere 10,100
`position object 10, 100,100,100
   Rem Builds cubes, sets textures.
`For x = 1 to 5
   `make object cube x,80
   `position object x,(x*100),35,2000
   `set object collision to boxes x
   `texture object x,2
`next x
  ` Rem Sets Static Textures.
`texture object 10,1
`Make player object
REM Decorative enviroment+++++++++++++++++++++++++++++++++++++++++++++++Enviroment
t=300
id = 0
n1 = 1
n2 = 1
For x = 1 to 9
	For z = 1 to 9
		load object "Trees1c.x",t
		set object transparency t, 4
		r = rnd(10)
		y = get ground height(1,(x*100)*r,(z*100)*r)
		Scale object t,(600+rnd(900)),(600+rnd(900)),(600+rnd(900))
			if rnd(10) > 9
				Scale object t,1000+rnd(500),1000+rnd(500),1000+rnd(500)
					if rnd(20) > 10
						Scale object t,10000+rnd(5000),10000+rnd(5000),10000+rnd(5000)
							for fl = 400 to 420 
								rx = rnd(1500)
								rz = rnd(1500)
									if rnd(2) > 1
										rx = rx*-1
										else
										rx = rx*1
									endif
									if rnd(2) > 1
										rz = rz*-1
										else
										rz = rz*1
									endif
								load object "flower2.x",fl+id
								mY = get ground height(1,(((x*100)*r)+rx),(((z*100)*r)+rz))
								position object fl+id,(((x*100)*r)+rx),mY,(((z*100)*r)+rz)
								scale object fl+id, 40,40,40
								set object transparency fl+id, 4
								set object collision off fl+id 
									`if object position x(fl+id) < (((x*100)*r)+40)
									`	hide object fl+id
									`endif 
									`if object position z(fl+id) < (((z*100)*r)+40)
									`	hide object fl+id
									`endif 
								inc id
							next fl 
					endif 	
			endif
		position object t,(x*100)*r,y-20,(z*100)*r
		set object collision off t
		inc t
	next z
next x
rem Make Gun +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Guns
Rem Default gun.
XRotate Object 53,0
Fix object pivot 53
Scale object 53,5000,5000,5000
position object 53,10,-7,10
Lock object on 53
set object collision to boxes 53

`position object 111, camera position x(),camera position y(),camera position z()
`SET OBJECT TO CAMERA ORIENTATION 111
`move object 111, 1 `where 1 is just enough to be visible infront of the camera
`move object down 111, 1 `where 1 is just enough to be just at the bottom of the cam view



bullets = 25
rem Start engine##############################################################################################
rem Start engine#############################################################################################
rem Start engine##############################################################################################
rem Start engine#############################################################################################
rem Start engine##############################################################################################
rem Start engine#############################################################################################
	rem Position camera to main camera location
type type1     
    life as integer
endtype
dim Bullet(50) as type1
Do
sync
rem This is what makes the bullet shoot. +++++++++++++++++++++++++++++++++++++++++++++Bullet mechanics.
rem mouseclick()=1 right, 2, left mouse.
    REM check for mouse click
    FIRE=0
    if mouseclick()=1
        if click=0
            FIRE=1
        endif
        click=1
    else
        click=0
    endif
    REM Fire a bullet
    if FIRE=1 and bullets > 0
        REM Make a bullet
        `play sound 3
        dec bullets 
        done=0
        n=1
        while done=0
            if object exist(n)=0
                make object sphere n, 1
                set object collision to spheres n
                color object n,rgb(255,255,255)
                position object n, camera position x(),camera position y(),camera position z()
                rotate object n, (camera angle x()+rnd(1)),(camera angle y()+rnd(1)),(camera angle z()+rnd(1))
                move object right n, 5 
                move object down n,2
                done=1
            endif
            inc n
            if n=50 then done=1
        endwhile
    endif
    REM Move bullets
    for x=1 to 50        
        if object exist(x)=1
        Life=Bullet(x).life
            if Life<250
            bX#=object position X(x)
            bY#=object position Y(x)
            bZ#=object position Z(x)
			inc Pn
			if Pn=1020 then Pn = 1000
			scale object Pn,100,100,100
			position object Pn,bX#,bY#,bZ#
			point object Pn, X#,Y#,Z#
			Zrotate object Pn,rnd(180)
			 for q = 1000 to 1010
				show object int((Wrapvalue((Pn-900+y)*3600))/3600)+1000 rem shows smoke again if bullet hit something earlier.
				scale object int((Wrapvalue((Pn-900+q)*3600))/3600)+1000,10000+q*2000,10000+q*2000,10000+q*2000 rem sets the last bits of the smoke to be larger than the first.
			 next q 
                move object x, bullS#
                Bullet(x).life=Life+1
               		if object collision (x,0)>0
        				delete object x 
        				for y = 1 to 10
        					hide object int((Wrapvalue((Pn-900+y)*3600))/3600)+1000 rem hides smoke.        
        				next y 
        			endif
            else
                delete object x
                Bullet(x).life=0
             	    for y = 1 to 10
        				hide object int((Wrapvalue((Pn-900+y)*3600))/3600)+1000 rem hides smoke.        
        			next y 
            endif
        endif      		
    next x

if keystate(19)=1
bullets = 25
endif


rem Player++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Player
move_player_with_collision(mH#,54,0,yang#,xang#)
	if keystate(42)=1
		slowmo = 1
		bullS# = 4
	else 
		slowmo = 0
		bullS# = 12
	endif
	
	if slowmo = 0
	OldCamAngleY# = yang#
	OldCamAngleX# = xang#
	endif
	if slowmo = 1
	OldCamAngleY# = Camera Angle Y()
	OldCamAngleX# = Camera Angle X()
	endif

yang#=(yang#+mousemovex()*0.2)
xang#=(xang#+mousemovey()*0.2)
`get the player object position
x#=object position x(54)
y#=object position y(54)
z#=object position z(54)
mH# = get ground height(1,x#,z#)
`position and rotate the camera
if xang#< -90  then xang#=xang#+10
if xang#> 90 and xang#-270<270 then xang#=90
position camera x#,y#+50,z#
yrotate camera CurveAngle(yang#,OldCamAngleY#,24)
xrotate camera CurveAngle(xang#,OldCamAngleX#,24)
`	OldCamAngleY# = CameraAngleY# 
`	OldCamAngleX# = CameraAngleX# 
`	CameraAngleY# = WrapValue(CameraAngleY#+MousemoveX()*0.2) 
`	CameraAngleX# = WrapValue(CameraAngleX#+MousemoveY()*0.2) 
`	Yrotate camera CurveAngle(CameraAngleY#,OldCamAngleY#,24) 
`	Xrotate camera CurveAngle(CameraAngleX#,OldCamAngleX#,24) 
	
`	Y# = Get ground height(1,X#,Z#) 
`	Position Camera X#,Y#+50,Z# 


cax# = camera angle x()
cay# = camera angle y()
caz# = camera angle z()
rotate object 54, cax#,cay#,caz#

	Rem Physics+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Physics

 
   Rem Draw cross-hair+++++++++++++++++++++++++++++++++++++++++++++++++++++Crosshairs
   ink rgb(255,255,255),0
   line screen width()/2-6, screen height()/2, screen width()/2+7 , screen height()/2
   line screen width()/2, screen height()/2-6, screen width()/2, screen height()/2+7
   ink 0,0 Rem This sets the ink to black
   circle screen width()/2,screen height()/2,15
   circle screen width()/2,screen height()/2,1
   ink rgb(255,255,255),0

	Rem Print Info+Debug++++++++++++++++++++++++++++++++++++++++++++++++++++++HUD/DEBUG/PRINT
   print "Ammo: ", bullets
Loop
rem End of Main Loop ###############################################################################################
rem End of Main Loop ###############################################################################################
rem End of Main Loop ###############################################################################################
rem End of Main Loop ###############################################################################################
rem End of Main Loop ###############################################################################################
rem End of Main Loop ###############################################################################################


rem Functions+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Functions
 
 
 function move_player_with_collision(mH#,objectnr,coll,colang#,xang#)
yz#=object position y(objectnr)
x#=object position x(objectnr)
`y#=get ground height(1,x#,z#)
y#=object position y(objectnr)
z#=object position z(objectnr)
objectang#=colang#
if keystate(42)=1
gC# = 1
xS# = 2
zS# = 2
else 
gC# = 3
xS# = 6 
zS# = 6
endif
if keystate(17)=1
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=newxvalue(x#,objectang#,xS#)
   newz#=z#
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
	   if object collision(objectnr,coll)>0
    	  position object objectnr,x#,y#,z#
   	   endif 
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=x#
   newz#=newzvalue(z#,objectang#,zS#)
   newy#=y#
   `play sound 4
   position object objectnr,newx#,object position y(objectnr),newz#
   		if object collision(objectnr,coll)>0
      		position object objectnr,x#,y#,z#
   		endif
endif


if keystate(31)=1
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=newxvalue(x#,objectang#+180,xS#)
   newz#=z#
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
   if object collision(objectnr,coll)>0
      position object objectnr,x#,y#,z#
   endif
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=x#
   newz#=newzvalue(z#,objectang#+180,zS#)
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
   if object collision(objectnr,coll)>0
      position object objectnr,x#,y#,z#
   endif
endif
if keystate(32)=1
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=newxvalue(x#,objectang#+90,xS#-1)
   newz#=z#
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
   if object collision(objectnr,coll)>0
      position object objectnr,x#,y#,z#
   endif
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=x#
   newz#=newzvalue(z#,objectang#+90,xS#-1)
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
   if object collision(objectnr,coll)>0
      position object objectnr,x#,y#,z#
   endif
endif
if keystate(30)=1
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=newxvalue(x#,objectang#+270,xS#-1)
   newz#=z#
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
   if object collision(objectnr,coll)>0
      position object objectnr,x#,y#,z#
   endif
  x#=object position x(objectnr)
  y#=object position y(objectnr)
  z#=object position z(objectnr)
   newx#=x#
   newz#=newzvalue(z#,objectang#+270,zS#-1)
   newy#=y#
   position object objectnr,newx#,object position y(objectnr),newz#
   if object collision(objectnr,coll)>0
      position object objectnr,x#,y#,z#
   endif
endif
x#=object position x(objectnr)
y#=object position y(objectnr)
z#=object position z(objectnr)
if jumping = 0
if y# > mH# or y# < mH#
	jumping = 0
	jump_angle = 0
	jumpable = 1
	
endif
   start_y# = y# - 2.0
   if spacekey()=1 and jumpable = 1
      jumping = 1
      jump_angle# = 0
      start_y# = object position y(objectnr)
      jumpable = 0
      jH# = object position y(objectnr)
   endif
endif
if jumping = 1
   jump_angle# = jump_angle# + gC# 
   if jump_angle# => 180 then jumping=0
endif
if object collision (objectnr,coll)>0 
yC# = object position y(objectnr) + mH#
position object objectnr,x#,mH#+ sin(jump_angle#)*(70.0+yC#),z#
else
position object objectnr,x#,mH#+ sin(jump_angle#)*(70.0),z#
endif
 if object collision(objectnr,coll)>0
      position object objectnr,x#,yz#,z#
      
   yC# = 30
   endif

endfunction